<?xml version="1.0" encoding="utf-8"?>
<s:Window width="640" height="480"
		  skinClass="com.flaircode.locres.view.skin.WindowSkin" xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
		  xmlns:mx="library://ns.adobe.com/flex/halo" showStatusBar="false" resizable="false"
		  title="{resourceManager.getString('lr', '$LR/AutoTranslate')}" creationComplete="cc()" close="closeHandler()">

	<fx:Script>
		<![CDATA[
			import com.flaircode.locres.model.LocaleModel;
			import mx.binding.utils.BindingUtils;
			import org.swizframework.Swiz;
			import com.flaircode.locres.domain.Resource;
			import mx.collections.ListCollectionView;
			import mx.collections.ArrayCollection;
			import com.flaircode.locres.domain.LocaleDir;
			import com.flaircode.locres.event.TranslateEvent;
			import com.flaircode.locres.helper.LocaleViewHelper;
			
			[Bindable]
			[Autowire]
			public var localeViewHelper:LocaleViewHelper;
			
			[Bindable]
			[Autowire]
			public var localeModel:LocaleModel;
			
			[Bindable]
			public var resourceList:ListCollectionView;
			
			private var refreshTimer:Timer;
			
			private function closeHandler() : void {
				if ( refreshTimer != null ) {
					refreshTimer.stop();
				}
			}
			
			private function translateHandler( e : MouseEvent ) : void {
				e.currentTarget.enabled = false;
				var lang:String = fromLang.selectedItem as String;
				var selectedLocaleDir:LocaleDir = localeModel.selectedLocaleDir;
				
				if ( Swiz.dispatchEvent( new TranslateEvent( TranslateEvent.TRANSLATE, selectedLocaleDir, lang ) ) ) {
					close();
				}
			
			
			
			/* refreshTimer = new Timer(500);
			   refreshTimer.addEventListener(TimerEvent.TIMER, function(e:TimerEvent):void
			   {
			   cc();
			   });
			 refreshTimer.start(); */
			}
			
			private function cc() : void {
				var fromLangResources:ListCollectionView = localeModel.getLocaleDirByCode( fromLang.selectedItem as String ).resources;
				/* if(fromLang.selectedItem != null)
				   {
				   fromLangResources = localeModel.getLocaleDirByCode(fromLang.selectedItem as String).resources
				   }
				   else
				   {
				   fromLangResources = LocaleDir(localeModel.localeDirs.getItemAt(0)).resources;
				 } */
				var toLangResources:ListCollectionView = localeModel.selectedLocaleDir.resources;
				
				var res:ArrayCollection = new ArrayCollection();
				for each ( var resource : Resource in fromLangResources ) {
					// ignore "$"
					if ( resource.value.indexOf( "$" ) != 0 ) {
						var o:Object = {key: resource.name, fromLang: resource.value};
						var toResource:Resource = localeModel.selectedLocaleDir.getResourceByKey( resource.name );
						if ( toResource != null ) {
							o.toLang = toResource.value;
							toResource.removeEventListener( Event.CHANGE, resChange );
							toResource.addEventListener( Event.CHANGE, resChange );
						} else {
							o.toLang = "";
						}
						res.addItem( o );
					}
				}
				
				resourceList = res;
			}
			
			private function resChange( e : Event ) : void {
				cc();
			}
		]]>
	</fx:Script>

	<s:VGroup paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">

		<mx:HBox width="100%">
			<s:Label text="{resourceManager.getString('lr', '$LR/AutoTranslate/FromLanguage')}" />
			<mx:ComboBox id="fromLang"
						 dataProvider="{localeViewHelper.getTranslateAbleLocalesForLocale(localeModel.selectedLocaleDir.locale)}" change="cc()" />
			<mx:Spacer width="100%" />
			<s:Button width="200" height="30"
					  label="{resourceManager.getString('lr', '$LR/Common/Translate')}" click="translateHandler(event)" />
		</mx:HBox>

		<s:VGroup width="100%" height="100%">
			<s:Label text="{resourceManager.getString('lr', '$LR/Common/Translate')}" />
			<mx:DataGrid id="resources" width="100%" height="100%"
						 allowMultipleSelection="true" dragEnabled="true" dragMoveEnabled="true" dataProvider="{resourceList}">
				<mx:columns>
					<!--<mx:DataGridColumn width="25">
						 <mx:itemRenderer>
						 <mx:Component>
						 <mx:CheckBox selected="true" />
						 </mx:Component>
						 </mx:itemRenderer>
						 </mx:DataGridColumn>-->
					<mx:DataGridColumn headerText="{resourceManager.getString('lr', '$LR/Common/Key')}" dataField="key" />
					<mx:DataGridColumn headerText="To {localeModel.selectedLocaleDir.locale}" dataField="toLang" />
					<mx:DataGridColumn headerText="From {fromLang.selectedItem}" dataField="fromLang" />
				</mx:columns>
			</mx:DataGrid>
		</s:VGroup>
	</s:VGroup>

</s:Window>
